
$(document).ready(function() {
    var text = "Wedding day";
    var speed = 100;
    var contentLoaded = false;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
    function typeWriter(text, i, fnCallback) {
        if (i < text.length) {
            $('#preloader-quote').html(text.substring(0, i + 1));
            setTimeout(function() {
                typeWriter(text, i + 1, fnCallback);
            }, speed);
        } else {
            fnCallback();
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
    function startAnimation() {
        typeWriter(text, 0, function() {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            var fadeOutTime = contentLoaded ? 3000 : 5000;
            setTimeout(function() {
                $('#preloader').fadeOut('slow');
            }, fadeOutTime);
        });
    }

    // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏
    startAnimation();

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–∫–Ω–∞
    $(window).on('load', function() {
        contentLoaded = true;
    });
});






let isStarted = false; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–ø—É—Å–∫–∞–ª–∏ –ª–∏ —É–∂–µ –∞—É–¥–∏–æ

function toggleMusic() {
    let audio = document.getElementById("bgMusic");
    let button = document.getElementById("musicToggle");
    let icon = button.querySelector("i");
    let text = document.getElementById("musicText");

    if (audio.paused) {
        audio.play().then(() => {
            if (!isStarted) {
                audio.currentTime = 45.5; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 45 —Å–µ–∫—É–Ω–¥ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
                isStarted = true;
            }
            icon.classList.remove("fa-music");
            icon.classList.add("fa-pause");
            text.style.display = "none";
        }).catch(error => {
            console.log("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", error);
        });
    } else {
        audio.pause();
        icon.classList.remove("fa-pause");
        icon.classList.add("fa-music");
    }
}

document.addEventListener("DOMContentLoaded", function () {
    document.getElementById("musicToggle").addEventListener("click", toggleMusic);
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø–æ–ø–∞–ª –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
function isElementInView(el) {
    const rect = el.getBoundingClientRect();
    return (
        rect.top >= 0 &&
        rect.left >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
        rect.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–∞ active –ø—Ä–∏ –ø–æ–ø–∞–¥–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
function handleScroll() {
    const blocks = document.querySelectorAll('.dresscode-info-block');
    blocks.forEach(block => {
        if (isElementInView(block)) {
            block.classList.add('active');
        }
    });
}

// –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ scroll
window.addEventListener('scroll', handleScroll);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, —á—Ç–æ–±—ã –∞–Ω–∏–º–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞ —Å—Ä–∞–∑—É, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —É–∂–µ –≤–∏–¥–∏–º—ã
handleScroll();











document.querySelector(".wedding-form").addEventListener("submit", async function (e) {
    e.preventDefault(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

    // üîπ –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –°–í–û–ò –î–ê–ù–ù–´–ï!
    const TOKEN = "7644603205:AAHP68FDVDVowQhLnkeCxdqOR0565Pggtns";
    const CHAT_ID = "390335723";
    const API_URL = `https://api.telegram.org/bot${TOKEN}/sendMessage`;

    const fieldNames = {
        attendance: "–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ",
        fullname: "–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è",
        drink: "–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º",
        wishes: "–ü–æ–∂–µ–ª–∞–Ω–∏—è",
    };
    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
    const formData = new FormData(this);
    let message = "<b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–≤–∞–¥—å–±—É üéâ</b>\n\n";
    let drinks = [];

    for (let [key, value] of formData.entries()) {
        if (key === "drink") {
            drinks.push(value); // –î–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É
        } else {
            let fieldName = fieldNames[key] || key;
            message += `<b>${fieldName}:</b> ${value}\n`;
        }
    }
    if (drinks.length > 0) {
        message += `<b>–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º:</b> ${drinks.join(", ")}\n`;
    }
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Telegram
    const response = await fetch(API_URL, {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({
            chat_id: CHAT_ID,
            text: message,
            parse_mode: "HTML",
        }),
    });

    if (response.ok) {
        alert("–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
        this.reset(); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
    } else {
        alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
});

function startCountdown(targetDate) {
    function updateCountdown() {
        const now = new Date().getTime();
        const timeLeft = targetDate - now;

        if (timeLeft <= 0) {
            document.getElementById("countdown").innerHTML = "–°–æ–±—ã—Ç–∏–µ –Ω–∞—á–∞–ª–æ—Å—å!";
            clearInterval(interval);
            return;
        }

        const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

        document.getElementById("days").textContent = days;
        document.getElementById("hours").textContent = hours;
        document.getElementById("minutes").textContent = minutes;
        document.getElementById("seconds").textContent = seconds;
    }

    updateCountdown();
    const interval = setInterval(updateCountdown, 1000);
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è
const targetDate = new Date("September 18, 2025 12:00:00").getTime();
startCountdown(targetDate);



document.addEventListener("DOMContentLoaded", () => {
    const hiddenElements = document.querySelectorAll(".hidden");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add("show");
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });

    hiddenElements.forEach(element => observer.observe(element));
});

document.addEventListener("DOMContentLoaded", () => {
    const hiddenElements = document.querySelectorAll(".hid");

    const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add("show");
                observer.unobserve(entry.target);
            }
        });
    }, { threshold: 0.1 });

    hiddenElements.forEach(element => observer.observe(element));
});


document.addEventListener("DOMContentLoaded", function () {
    const parallax = document.querySelector(".parallax-bg");

    window.addEventListener("scroll", function () {
        let scrollPosition = window.scrollY;
        parallax.style.transform = `scale(1.1) translateY(${scrollPosition * 0.2}px)`;
    });
});


// document.addEventListener("DOMContentLoaded", function () {
//     const parallax = document.querySelector(".parallax-window");
//     const imageSrc = parallax.getAttribute("data-image-src");
//
//     // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ–Ω —á–µ—Ä–µ–∑ ::before
//     parallax.style.position = "relative";
//     parallax.style.overflow = "hidden";
//     parallax.style.background = "none";
//
//     const bg = document.createElement("div");
//     bg.style.position = "absolute";
//     bg.style.top = "0";
//     bg.style.left = "0";
//     bg.style.width = "100%";
//     bg.style.height = "130%"; // –ß—É—Ç—å –±–æ–ª—å—à–µ, —á—Ç–æ–±—ã –ø–ª–∞–≤–Ω–æ –¥–≤–∏–≥–∞–ª–æ—Å—å
//     bg.style.backgroundImage = ``;
//     bg.style.backgroundSize = "cover";
//     bg.style.backgroundPosition = "center";
//     bg.style.willChange = "transform";
//     parallax.appendChild(bg);
//
//     function updateParallax() {
//         let scrollTop = window.scrollY;
//         let parallaxSpeed = 0.3; // –ß–µ–º –º–µ–Ω—å—à–µ, —Ç–µ–º –º–µ–¥–ª–µ–Ω–Ω–µ–µ
//
//         bg.style.transform = `translateY(${scrollTop * parallaxSpeed}px)`;
//     }
//
//     window.addEventListener("scroll", updateParallax);
// });


document.addEventListener("DOMContentLoaded", function () {
    const dresscodeBlock = document.querySelector(".dresscode-info-blocks");

    function checkVisibility() {
        const rect = dresscodeBlock.getBoundingClientRect();
        if (rect.top < window.innerHeight - 100) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –±–ª–æ–∫ —É–∂–µ –≤ –∑–æ–Ω–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏
            dresscodeBlock.classList.add("active");
            window.removeEventListener("scroll", checkVisibility); // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è
        }
    }

    window.addEventListener("scroll", checkVisibility);
    checkVisibility(); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–µ—Å–ª–∏ –±–ª–æ–∫ —É–∂–µ –≤–∏–¥–µ–Ω)
});
